# UN Reports RAG Configuration

# Data collection settings
date_window_days: 365
languages: ["en"]
throttle:
  delay_seconds: 5
  max_retries: 3

# Usage controls for cost management
rate_limiting:
  max_queries_per_hour: 20
  cooldown_seconds: 3
  enable_fallback: true
  # OpenAI API rate limits
  openai_tpm_limit: 1000000  # Tokens per minute
  openai_rpm_limit: 3500     # Requests per minute
  batch_size: 8              # Small batch size to avoid rate limits

# UN bodies to prioritize (high-impact reports)
target_bodies:
  - "General Assembly"
  - "Security Council" 
  - "Economic and Social Council"
  - "Secretary-General"
  - "Trusteeship Council"
  - "Secretariat"

# High-priority report types
priority_keywords:
  - "annual report"
  - "progress report"
  - "situation"
  - "climate"
  - "sustainable development"
  - "peacekeeping"
  - "humanitarian"
  - "human rights"

# Document processing
parsing:
  chunk_tokens: 1200
  overlap_tokens: 150
  min_chunk_length: 100

# Retrieval settings
retrieval:
  top_k: 10
  max_context_tokens: 8000
  min_similarity_threshold: 0.3  # Minimum cosine similarity to consider relevant
  embedding_provider: "openai"  # or "local_bge"
  fallback_to_local: true       # Use BGE if no OpenAI key
  reranker: null  # or "bge-reranker-base"

# OpenAI settings (optimized for cost)
openai:
  embedding_model: "text-embedding-3-small"  # Cheapest embedding model
  chat_model: "gpt-4o-mini"                 # Better quality than 3.5-turbo, cheaper than 4o
  max_tokens: 1000                          # Reduced tokens to save cost

# Local BGE fallback
local_embeddings:
  model: "BAAI/bge-small-en-v1.5"
  device: "cpu"

# File paths
paths:
  raw_data: "data/2025-core/raw"
  parsed_data: "data/2025-core/parsed"
  index_file: "data/index.faiss"
  metadata_file: "data/index.meta.json"
  records_file: "data/records.parquet"
  chunks_file: "data/parsed/chunks.parquet"

# Corpus management
corpus:
  target_documents: 500        # Reduced for demo to avoid rate limits
  max_size_gb: 8               # Allow much larger corpus
  prioritize_recent: true      # Favor newer documents
  core_only: false             # Use expanded dataset